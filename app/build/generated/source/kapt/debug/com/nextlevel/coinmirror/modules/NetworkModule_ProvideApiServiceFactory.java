// Generated by Dagger (https://dagger.dev).
package com.nextlevel.coinmirror.modules;

import com.nextlevel.coinmirror.apiservice.APIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_ProvideApiServiceFactory implements Factory<APIService> {
  @Override
  public APIService get() {
    return provideApiService();
  }

  public static NetworkModule_ProvideApiServiceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static APIService provideApiService() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApiService());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideApiServiceFactory INSTANCE = new NetworkModule_ProvideApiServiceFactory();
  }
}
